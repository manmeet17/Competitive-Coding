'''
aeiou
10010
11111
-----
01101


01101
11110

11111

e =   10010
X-e = 01101
We need to calculate submasks of (X-e)
submasks of X-e -
aeiu 
11101 k=2 

eiou
01111

aeiou
11111

eiu
01101


10010
00001

[a,e,i,o,u]
[2,2,2,2,1]
'''
from collections import defaultdict
h = {
  '11111': [],
  '00001': ['00011', '00101', '00111', '01001', '01011', '01101', '01111', '10001', '10011', '10101', '10111', '11001', '11011', '11101'],
  '11111': [],
  '11110': [],
  '11101': [],
  '11100': ['11101', '11110'],
  '11011': [],
  '11010': ['11011', '11110'],
  '11001': ['11011', '11101'],
  '11000': ['11001', '11010', '11011', '11100', '11101', '11110'],
  '10111': [],
  '10110': ['10111', '11110'],
  '10101': ['10111', '11101'],
  '10100': ['10101', '10110', '10111', '11100', '11101', '11110'],
  '10011': ['10111', '11011'],
  '10010': ['10011', '10110', '10111', '11010', '11011', '11110'],
  '10001': ['10011', '10101', '10111', '11001', '11011', '11101'],
  '10000': ['10001', '10010', '10011', '10100', '10101', '10110', '10111', '11000', '11001', '11010', '11011', '11100', '11101', '11110'],
  '01111': [],
  '01110': ['01111', '11110'],
  '01101': ['01111', '11101'],
  '01100': ['01101', '01110', '01111', '11100', '11101', '11110'],
  '01011': ['01111', '11011'],
  '01010': ['01011', '01110', '01111', '11010', '11011', '11110'],
  '01001': ['01011', '01101', '01111', '11001', '11011', '11101'],
  '01000': ['01001', '01010', '01011', '01100', '01101', '01110', '01111', '11000', '11001', '11010', '11011', '11100', '11101', '11110'],
  '00111': ['01111', '10111'],
  '00110': ['00111', '01110', '01111', '10110', '10111', '11110'],
  '00101': ['00111', '01101', '01111', '10101', '10111', '11101'],
  '00100': ['00101', '00110', '00111', '01100', '01101', '01110', '01111', '10100', '10101', '10110', '10111', '11100', '11101', '11110'],
  '00011': ['00111', '01011', '01111', '10011', '10111', '11011'],
  '00010': ['00011', '00110', '00111', '01010', '01011', '01110', '01111', '10010', '10011', '10110', '10111', '11010', '11011', '11110']
}
for i in h:
    h[i].append(i)
    if i!='11111':
        h[i].append('11111')
h['00000']=list(h.keys())
for _ in range(int(input())):
    n=int(input())
    l=[]
    f=(1<<5)-1
    d=defaultdict(int
    )
    for i in range(n):
        k=set(input())
        num=list('00000')
        if 'a' in k:
            num[0]='1'
        if 'e' in k:
            num[1]='1'
        if 'i' in k:
            num[2]='1'
        if 'o' in k:
            num[3]='1'
        if 'u' in k:
            num[4]='1'
        num=''.join(num)
        # print(k,num)
        l.append(num)
        d[num]+=1
    ans=0
    av=0
    # print(d)
    for i in d:
        x=bin(int(i,2)^f)[2:]
        x='0'*(5-len(x))+x
        # print(i,x, h[x])
        for j in h[x]:
            # print(i,j, bin(int(i,2)|int(j,2))[2:])
            if j in d:
                # print(i,j)
                if i==j:
                    ans+=(d[j]*(d[i]-1))
                else:
                    ans+=d[j]*d[i]
                # print("inside--->",ans)
        # print(i,ans)
    print(ans//2)